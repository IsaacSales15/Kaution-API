generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String      @id @default(auto()) @map("_id") @db.ObjectId
  email              String      @unique
  name               String
  password           String
  isVerified         Boolean?    @default(false)
  verificationCode   String?
  verificationExpire DateTime
  inventories        Inventory[]
  created            DateTime?   @default(now())
  updateAt           DateTime?   @updatedAt
  authCodes          AuthCode[]
}

model AuthCode {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId  String   @db.ObjectId
  code    String
  expire  DateTime
  created DateTime @default(now())
  user    User     @relation(fields: [userId], references: [id])

  @@index([userId, expire])
}

model Inventory {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  user       User       @relation(fields: [userId], references: [id])
  userId     String     @db.ObjectId
  name       String
  updateAt   DateTime   @updatedAt
  createAt   DateTime   @default(now())
  categories Category[]
}

model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  inventory   Inventory @relation(fields: [inventoryId], references: [id])
  inventoryId String    @db.ObjectId
  products    Product[]
  created     DateTime  @default(now())
  updateAt    DateTime  @updatedAt
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  quantity    Int
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String   @db.ObjectId
  created     DateTime @default(now())
  updateAt    DateTime @updatedAt
}
